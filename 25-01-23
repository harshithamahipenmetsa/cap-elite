1.Lowest Common Ancestor of a Binary Tree:

class Solution {
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        if(root == null || root == p || root == q){
            return root;
        }
        TreeNode left = lowestCommonAncestor(root.left,p,q);
        TreeNode right = lowestCommonAncestor(root.right,p,q);
        if(left != null && right != null){
            return root;
        }
        if( left == null & right == null){
            return null;
        }
        if(left != null){
            return left;
        }
        else if(right != null)
        {
            return right;
        }
        else
        {
            return root;
        }
    }
}

2. Diameter of Binary Tree:

class Solution {
    int height = 0;
    public int diameterOfBinaryTree(TreeNode root) {
        height(root);
        return height;
    }
    int height(TreeNode node){
        if(node == null){
            return 0;
        }
        int lh = height(node.left);
        int rh = height(node.right);
        height = Math.max(height,rh+lh);
        return Math.max(lh,rh)+1;
    }
}
