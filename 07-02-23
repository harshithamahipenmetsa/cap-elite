Scales by match:

class Result {
    public static int sockMerchant(int n, List<Integer> ar) {
        int a = 0;
        HashSet<Integer> list = new HashSet<>();
        for(int i=0; i<n; i++){
            if(!list.contains(ar.get(i))){
                list.add(ar.get(i));
            }else{
                list.remove(ar.get(i));
                a++;
            }
        }
        return a;
    }
}


Dynamic Array:

class Result {
    public static List<Integer> dynamicArray(int n, List<List<Integer>> queries) {
        List<Integer> a = new ArrayList<>();
        int s = 0;
        List<List<Integer>> arr = new ArrayList<>();
        for(int i=0; i<n; i++){
            List<Integer> b = new ArrayList<>();
            arr.add(b);
        } 
        for(int i=0; i<queries.size(); i++){
            int idx = (queries.get(i).get(1)^s)%n;
            if(queries.get(i).get(0) == 1){
                arr.get(idx).add(queries.get(i).get(2));
            }
            else{
                s = arr.get(idx).get(queries.get(i).get(2)%arr.get(idx).size());
                a.add(s);
            }
        }
        return a;
    }
}

Class and objects 9:

public class Solution {
    static class Person{
        int age;
        public Person(int initialAge){
            if(initialAge > 0){
                age = initialAge;
            }else{
                System.out.println("Age is not valid, setting age to 0.");
                age = 0;
            }
        }
        public void amIOld(){
            if(age < 13){
                System.out.println("You are young.");
            }else if(age < 18){
                System.out.println("You are a teenager.");
            }else{
                System.out.println("You are old.");
            }
        }
        public void yearPasses(){
                age++;
            }
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int T = sc.nextInt();
        for (int i = 0; i < T; i++) {
            int age = sc.nextInt();
            Person p = new Person(age);
            p.amIOld();
            for (int j = 0; j < 3; j++) {
                p.yearPasses();
            }
            p.amIOld();
            System.out.println();
    }
        sc.close();
}
}

